---

#- name: enable gcloud services for GCP Cloud Function
#  command:
#    cmd: gcloud services enable cloudfunctions.googleapis.com cloudbuild.googleapis.com
#
#- name: enable gcloud services for GCP Cloud Function gen2 which also uses container registry
#  command:
#    cmd: gcloud services enable cloudresourcemanager.googleapis.com run.googleapis.com artifactregistry.googleapis.com containerregistry.googleapis.com
#
#- name: Pause for 30 seconds to wait for service to enable
#  pause:
#    seconds: 30

# https://cloud.google.com/sdk/gcloud/reference/artifacts/repositories/create#--repository-format
- name: create artifact repository repo
  command:
    cmd: gcloud artifacts repositories create my-repo --location={{region}} --repository-format=docker
  register: create_repo
  failed_when: create_repo.rc!=0 and not "repository already exists" in create_repo.stderr

- name: create directory for deployment
  file:
    path: /tmp/cloudfunction
    state: directory

- name: copy over flask app python files
  copy:
    src: "{{item}}"
    dest: /tmp/cloudfunction/.
  with_fileglob: "{{role_path}}/files/*"

# https://cloud.google.com/sdk/gcloud/reference/beta/functions/deploy
- name: deploy cloud function gen2 using gcloud (RESPONSE_TYPE=HTML|JSON|DEBUG)
  command:
    cmd: 'gcloud {{gcloud_channel_gen2}} functions deploy maintenance --entry-point=maintenance_switch --gen2 --runtime python38 --trigger-http --allow-unauthenticated --min-instances=1 --region={{region}} --set-env-vars="RESPONSE_TYPE=HTML,MAINTENANCE_MESSAGE=This site is under maintenance"'
    chdir: /tmp/cloudfunction
  register: deploy_res
- debug: msg="{{deploy_res}}"

# https://cloud.google.com/functions/docs/2nd-gen/configuration-settings#concurrency
- name: set 200 concurrency for gen2 cloud function, allow multiple requests on single instance
  command:
    cmd: gcloud {{gcloud_channel_gen2}} run services update maintenance --concurrency 200 --cpu=1 --region={{region}}

- name: find URL of Cloud Function
  command:
    cmd: 'gcloud {{gcloud_channel_gen2}} functions describe maintenance --format "value(serviceConfig.uri)" --region={{region}} --gen2'
  register: cloudfunc_url
- debug:
    msg: "curl {{cloudfunc_url.stdout}}"

- name: create serverless NEG for this cloud function
  command:
    cmd: gcloud compute network-endpoint-groups create maintenance-neg --region={{region}} --network-endpoint-type=serverless --cloud-run-service=maintenance
  failed_when: false

- name: create backend service
  command:
    cmd: gcloud compute backend-services create maintenance-backend --load-balancing-scheme=EXTERNAL --global
  failed_when: false

- name: add serverless NEG to backend service
  command:
    cmd: gcloud compute backend-services add-backend maintenance-backend --global --network-endpoint-group=maintenance-neg --network-endpoint-group-region={{region}}
  failed_when: false

- name: url map for maintenance
  command:
    cmd: gcloud compute url-maps create maintenance-lb1 --default-service=maintenance-backend --global
  failed_when: false

# the target-https-proxies and forwarding-rule is not needed if simply piggy-backing on existing LB
# the switch of services is done by modifying the current url-maps to point to a different default service

- name: target https proxy
  command:
    cmd: gcloud compute target-https-proxies create maintenance-https-proxy --ssl-certificates=lbcert1 --url-map=maintenance-lb1 --global
  failed_when: false

# https://cloud.google.com/load-balancing/docs/https/setting-up-https-serverless#creating_the_load_balancer
- debug:
    msg: "health checks are not supported for backend services with serverless NEG backends. no need to create health check"

- command:
    cmd: gcloud compute forwarding-rules create maintenance-frontend --load-balancing-scheme=EXTERNAL --target-https-proxy=maintenance-https-proxy --ports=443 --global
  failed_when: false

# swapping backends to a single external HTTPS LB (e.g. services and its maintenance page)
# https://cloud.google.com/sdk/gcloud/reference/compute/url-maps/set-default-service
# gcloud compute url-maps set-default-service extlb-lb1 --default-service=maintenance-backend --global
# gcloud compute url-maps set-default-service extlb-lb1 --default-service=extlb-backend --global
# verify change
# gcloud compute url-maps describe extlb-lb1 --global
